name: E2E Tests and Static Analysis

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

jobs:
  e2e-simulation:
    name: E2E Fork Simulation Tests
    runs-on: ubuntu-latest
    if: ${{ vars.RPC_URL_HTTP != '' && vars.FORK_BLOCK_NUMBER != '' }}
    
    env:
      NODE_ENV: test
      FORK_BLOCK: auto
      ENABLE_LIVE_EXECUTION: false
      ENABLE_FLASHBOTS: false
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Generate test fixtures (if needed)
      run: |
        if [ ! -f "reports/fixture-USDC-WETH-0.3%-18500000.json" ]; then
          echo "Generating test fixtures..."
          node scripts/generate-fixtures.js || echo "Using static fixtures"
        fi
      env:
        MAINNET_RPC_URL: ${{ secrets.MAINNET_RPC_URL }}
        RPC_URL_HTTP: ${{ vars.RPC_URL_HTTP || 'http://localhost:8545' }}
        RPC_URL_WS: ${{ vars.RPC_URL_WS || 'ws://localhost:8546' }}
        CHAIN: "ethereum"
        SIMULATION_MODE: "true"
        PRIVATE_KEY: "0x1111111111111111111111111111111111111111111111111111111111111111"
        
    - name: Run E2E fork simulation tests
      run: npm run test:fork
      timeout-minutes: 10
      env:
        FORK_BLOCK_NUMBER: ${{ vars.FORK_BLOCK_NUMBER }}
        RPC_URL_HTTP: ${{ vars.RPC_URL_HTTP || 'http://localhost:8545' }}
        RPC_URL_WS: ${{ vars.RPC_URL_WS || 'ws://localhost:8546' }}
        CHAIN: "ethereum"
        SIMULATION_MODE: "true"
        PRIVATE_KEY: "0x1111111111111111111111111111111111111111111111111111111111111111"
      
    - name: Run unit tests for flashloan orchestrator
      run: npm run test:unit -- --grep "Flashloan Orchestrator"
      env:
        RPC_URL_HTTP: ${{ vars.RPC_URL_HTTP || 'http://localhost:8545' }}
        RPC_URL_WS: ${{ vars.RPC_URL_WS || 'ws://localhost:8546' }}
        CHAIN: "ethereum"
        SIMULATION_MODE: "true"
        PRIVATE_KEY: "0x1111111111111111111111111111111111111111111111111111111111111111"
        
    - name: Upload simulation reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: simulation-reports
        path: reports/
        retention-days: 7

  static-analysis:
    name: Solidity Static Analysis
    runs-on: ubuntu-latest
    if: ${{ vars.SLITHER_ENABLE == 'true' }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Setup Python for Slither
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Install Slither
      run: |
        python -m pip install --upgrade pip
        pip install slither-analyzer
        
    - name: Run Slither analysis
      run: |
        echo "Running Slither static analysis..."
        if command -v slither &> /dev/null; then
          slither contracts/ --json slither-report.json || echo "Slither found issues (non-critical)"
          echo "Slither analysis completed"
        else
          echo "Slither not available, skipping static analysis"
          echo "⚠️ To enable Slither in your environment, install it with: pip install slither-analyzer"
        fi
        
    - name: Upload Slither report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: slither-report
        path: slither-report.json
        retention-days: 7

  e2e-summary:
    name: E2E Summary
    runs-on: ubuntu-latest
    needs: [e2e-simulation, static-analysis]
    if: always()
    
    steps:
    - name: Check E2E results
      run: |
        echo "=== E2E Test Summary ==="
        
        # Check if E2E was enabled
        if [[ "${{ vars.RPC_URL_HTTP }}" != "" && "${{ vars.FORK_BLOCK_NUMBER }}" != "" ]]; then
          echo "E2E Simulation: ${{ needs.e2e-simulation.result }}"
        else
          echo "E2E Simulation: Skipped (RPC_URL_HTTP or FORK_BLOCK_NUMBER not set)"
        fi
        
        # Check if Slither was enabled
        if [[ "${{ vars.SLITHER_ENABLE }}" == "true" ]]; then
          echo "Static Analysis: ${{ needs.static-analysis.result }}"
        else
          echo "Static Analysis: Skipped (SLITHER_ENABLE not set to 'true')"
        fi
        
        echo ""
        echo "ℹ️ E2E tests are optional and do not block CI."
        echo "ℹ️ To enable E2E tests, set RPC_URL_HTTP and FORK_BLOCK_NUMBER variables."
        echo "ℹ️ To enable Slither analysis, set SLITHER_ENABLE variable to 'true'."